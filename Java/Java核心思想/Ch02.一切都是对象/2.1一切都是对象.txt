2.1 用引用操作对象
String s; 只是创建了一个引用，并不是对象。因为此时s并没有关联任何事物。

2.2 所有对象都必须创建
String s = new String("str"); 不仅在内存中新创建了一个字符串对象，而且提供了操作字符串的引用s
数据存放区域：
1）寄存器
最快的区域，位于处理器内部。Java中不能直接感知和控制寄存器，但是C和C++允许像编译器建议寄存器的分配方式；
2）堆栈
位于通用RAM中，通过堆栈指针移动进行访问。指针向上移动，释放掉一些内存；指针向下移动，分配新的内存；
创建程序时，Java系统必须知道存储在堆栈内的所有确切的生命周期，以便上线移动堆栈指针；
3）堆
位于RAM区，用于存放所有的java对象。
堆不同于栈的好处是，编译器不需要知道存储数据在堆里存活多长时间，新产生对象时，java会在堆内存中自动分配，灵活性提高了很多。
相应的，分配和清理时堆要比栈化肥更多的时间
4）常量存储
常量值直接放在程序代码内部，因为它们永远不会被改变。
5）非RAM存储
数据存活于程序之外。需要的时候读取，恢复成常规基于RAM的对象。如流对象和持久化对象。