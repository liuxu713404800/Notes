InnoDB行记录：
	简单来说，一个页存放数据行数越多，性能越高；
	1.Compact行记录格式：
		---------------------------------------------------------------------------------------------
			变长字段长度列表 |	NULL标志位	|	记录头信息	|	例1数据	|	列2数据	|	...
		---------------------------------------------------------------------------------------------
		变长字段长度列表：若列的长度小于255，用1字节表示；列的长度大于255，用两个字节表示；存储方式按照列的字段顺序逆序排序；
		NULL标志位：表示该行中是否有NULL值，有的话用1表示，占用1个字节；也是按照列的从右到左的方式进行排列，例如第二列为空，则表示为00000010
		记录头信息：记录该行数据的一些概括信息，如是都被删除、堆索引中的排序记录、下一行记录的相对位置；
		真实数据列：
		NULL除了占有NULL标志位外，实际不占用任何空间；
		每行数据除了用户定义列外，还有两个隐藏列，事务ID列和回滚指针列，如果用户没有设置主键，还会增加一个6字节的rowid列；
	2.Redundant行记录格式：
		Redundant行记录是MySQL5.0之前的InnoDB的行记录存储方式。
		---------------------------------------------------------------------------------------------
			字段长度偏移列表 |	记录头信息	|	例1数据	|	列2数据	|	...
		---------------------------------------------------------------------------------------------
	3.行溢出数据：
		因为MySQL是索引组织表，所以一个叶子节点至少有两行数据，否则失去了B树的意义；
		对于溢出的值，会放到一个BLOB page中；
	4.Compressed和Dynamic行记录格式：
		对于存放在BLOB中的数据采用了完全的行溢出的方式，并且Compressed行记录会对数据进行压缩；
	5.Char的行类型存储：
		如果用户的字符长度不足，会以0x20来进行填充