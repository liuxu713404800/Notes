约束：
	关系型数据和文件系统的不同点是，关系型数据库本身能够保证数据的完整性，而文件系统一般需要在程序端进行控制；
	实体完整性：
		实体完整性要求每一个表中的主键字段都不能为空或者重复的值
		InnoDB中可以通过主键或者唯一索引保证实体的完整性；
	域完整性：
		域完整性是对数据表中字段属性的约束，通常指数据的有效性；
		可以通过设置字段值的范围，默认值等等；
	参照完整性：
		保证两张表之间的关系；
		可以通过外键或者触发器的形式实现；

视图：
	视图的结果返回与表的查询是不一致的，直观感受就是视图返回数据速度要比表查询快；
	物化视图相当于新形成一张表；

分区表：
	分区表不是在存储引擎层面完成的；
	MySQL支持水平分区：同一表的不同行记录分配到不同的物理文件中，不支持垂直分区：同一张表的不同列分配到不同的物理文件中；

	分区表类型：
		Range分区：连续性数据的分区；
		List分区：离散型数据的分区；
		Hash分区：将数据均匀分布到预定义的各个区内，保证各区数据量基本一致；
		Key分区：根据用户自定义的函数进行分区；
		COLUMNS分区：上述四种分区都需要以整形数据为划分依据，可以认为COLUMNS分区是之前的升级，支持非整形的数据分区

	对于NULL值，MYSQL认为是小于任何一个非NULL值数据的

	对于OLAP型的业务，选用分区表的时候要慎重