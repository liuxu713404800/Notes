行锁的三种算法：
	Record Lock：单行记录上的锁；可以看做是某一个值，如2；
	Gap Lock：间隙锁，锁定一个范围，不包含记录本身；可以看做是某个开区间，如（0，2）；
	Next-Key Lock: Gap Lock+Record Lock，锁定一个范围，并锁定记录本身；可以看做是某个半开区间，如（0，2]；
	使用Next-Key Lock是为了解决Phantom Problem（幻读）问题；
	幻读是指同一事务下，连续执行两次同样的SQL语句可能导致不同的结果，第二次SQL语句可能会返回之前不存在的行。

数据库的隔离级别：
	Serializable （串行化）：最严格的级别，事务串行执行，资源消耗最大；
	REPEATABLE READ（重复读）：保证了一个事务不会修改已经由另一个事务读取但未提交（回滚）的数据。
	避免了“脏读取”和“不可重复读取”的情况，但不能避免“幻读”，但是带来了更多的性能损失。
	READ COMMITTED （提交读）：大多数主流数据库的默认事务等级，保证了一个事务不会读到另一个并行事务已修改但未提交的数据。
	避免了“脏读取”，但不能避免“幻读”和“不可重复读取”。该级别适用于大多数系统。
	Read Uncommitted（未提交读）：事务中的修改，即使没有提交，其他事务也可以看得到。会导致“脏读”、“幻读”和“不可重复读取”。

锁问题：
	脏读：读取了未提交的数据，数据的隔离级别为READ UNCOMMITTED；
	————————————————————————————————————————————————————
		时间	|				转账事务A 						|				取款事务B
	————————————————————————————————————————————————————
	 	T1		|												|				开始事务
	————————————————————————————————————————————————————
		T2		|				开始事务						|				
	————————————————————————————————————————————————————
		T3		|												|			查询账户余额1000元
	————————————————————————————————————————————————————
		T4		|												|		取出500元，将余额改为500元
	————————————————————————————————————————————————————
		T5		|			查询账户余额为500元（脏读）			|		
	————————————————————————————————————————————————————
		T6		|												|		撤销事务，余额恢复为1000元
	————————————————————————————————————————————————————
		T7		|			汇入100元，把余额改为600元			|				
	————————————————————————————————————————————————————
		T8		|					提交事务					|				
	————————————————————————————————————————————————————


	不可重复读：不可重复读是指A事务读取了B事务已经提交的更改数据，数据库的隔离级别为READ COMMITTED；一般来说，不可重复读是可以接受的，读取到的是提交的事务，Oracle 和SQL Server的默认隔离级别为READ COMMITTED；
	————————————————————————————————————————————————————
		时间	|				转账事务A 						|				取款事务B
	————————————————————————————————————————————————————
	 	T1		|				开始事务						|				
	————————————————————————————————————————————————————
		T2		|												|				开始事务	
	————————————————————————————————————————————————————
		T3		|			查询账户余额1000元					|			查询账户余额1000元
	————————————————————————————————————————————————————
		T4		|												|		取出500元，将余额改为500元
	————————————————————————————————————————————————————
		T5		|												|				提交事务
	————————————————————————————————————————————————————
		T6		|			查询账户余额为500元					|			
	————————————————————————————————————————————————————
		T7		|		汇入100元，把余额改为600元				|				
	————————————————————————————————————————————————————
		T8		|					提交事务					|				
	————————————————————————————————————————————————————

	幻读：A事务读取B事务提交的新增数据,会引发幻读问题；
	————————————————————————————————————————————————————
		时间	|				转账事务A 						|				取款事务B
	————————————————————————————————————————————————————
	 	T1		|				开始事务						|				
	————————————————————————————————————————————————————
		T2		|												|				开始事务	
	————————————————————————————————————————————————————
		T3		|			统计总款数1000元					|			
	————————————————————————————————————————————————————
		T4		|												|		新增一个100元的存款账户
	————————————————————————————————————————————————————
		T5		|												|				提交事务
	————————————————————————————————————————————————————
		T6		|		查询账户余额为1100元（幻读）			|			
	————————————————————————————————————————————————————
		T7		|					提交事务					|				
	————————————————————————————————————————————————————