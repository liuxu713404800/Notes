1.文件锁
子进程回复制父进程的IO句柄，但是不能让所有的子进程同时对同一个文件进行操作，所以需要文件锁。

2.进程间的通讯方式--管道
管道是一组（2个）特殊的描述符
管道需要在fork函数调用前创建
如果某一段主动关闭管道，另一端读取操作会直接返回0，之后会关闭管道

在父进程中创建管道的时候，父进程会创建一组描述符；子进程在进行复制父进程时，会复制这一组描述符。

3.进程间的通讯方式--消息队列
使用消息队列比流式管道的好处是，假如某一端服务挂了，但是因为消息还在队列中，所以数据不会丢失
消息队列的通讯方式很像共享内存

可以通过指定key创建一个消息队列
在消息队列中传递的数据大小有限制 默认65535k
消息队列会一直保留到被主动关闭

4.IO多路复用
epoll会监听注册再在自己名下所有的socket描述符
当有socket感兴趣的时间发生时，epoll函数才会响应，并返回有时间发生的socket集合
epoll的本事是阻塞IO，优点是能够处理大量的socket集合

5.Event Loop简介
Event loop是一个Reactor线程，其中运行了一个epoll实例
可通过接口添加到socket描述符的epoll监听中，并制定时间响应的回调函数
因为Event loop是单独线程，不能用于fpm的环境下。因为fpm是新起的进程，事件完毕后有可能被关闭，此时scoket便不能被监听了。
开启Event loop后，程序会启动一个线程并一直阻塞在epoll的监听上，开启了Event loop后，程序会一直运行不停止，这也是swoole开发者的本意。终止的方法是调用swoole_event_exit函数。

6.swoole process包含三个部分：管道，内存和IO句柄
swoole process有以下的几个优点：
是基于C语言封装的管理模块，方便PHP多进程编程；
内置管道、消息队列接口，方便实现进程间的通信；
提供自定义信号管理